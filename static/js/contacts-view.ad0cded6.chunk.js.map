{"version":3,"sources":["Component/ContactForm/ContactForm.module.css","Component/Filter/Filter.module.css","Component/ElementContactList/ElementContactList.module.css","Component/ContactList/ContactList.module.css","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/v4.js","Component/ContactForm/ContactForm.js","redux/phonebook/phonebook-operations.js","redux/phonebook/phonebook-selectors.js","Component/Filter/Filter.js","Component/ElementContactList/ElementContactList.js","Component/ContactList/ContactList.js","views/ContactsView.js"],"names":["module","exports","getRandomValues","rnds8","Uint8Array","rng","crypto","bind","msCrypto","Error","validate","uuid","REGEX","test","byteToHex","i","push","toString","substr","stringify","arr","offset","arguments","length","undefined","toLowerCase","TypeError","v4","options","buf","rnds","random","ContactForm","state","name","number","nameInputId","uuidv4","numberInputId","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","alert","this","className","styles","contacts_form","htmlFor","label","type","pattern","title","required","onChange","id","input","form_button","Component","defaultProps","connect","dispatch","contact","addContactRequest","axios","post","then","data","addContactSuccess","catch","error","addContactError","message","addContact","getLoading","contacts","loading","getFilter","filter","getVisibleContacts","createSelector","items","normalizedFilter","includes","changeFilter","target","ElementContactList","contact_name","contact_number","ContactList","onfetchContacts","isLoadingContacts","contact_list","map","contact_item","onClick","item_button","deleteContactRequest","delete","deleteContactSuccess","deleteContactError","deleteContact","a","fetchContactRequest","get","fetchContactSuccess","fetchContactError","ContactsView","Container","React"],"mappings":"mIACAA,EAAOC,QAAU,CAAC,cAAgB,mCAAmC,YAAc,iCAAiC,MAAQ,2BAA2B,MAAQ,6B,oBCA/JD,EAAOC,QAAU,CAAC,YAAc,4BAA4B,KAAO,qBAAqB,OAAS,uBAAuB,KAAO,qBAAqB,gBAAkB,gCAAgC,iBAAmB,iCAAiC,MAAQ,sBAAsB,MAAQ,wB,oBCAhSD,EAAOC,QAAU,CAAC,aAAe,yCAAyC,eAAiB,6C,oBCA3FD,EAAOC,QAAU,CAAC,aAAe,kCAAkC,aAAe,kCAAkC,YAAc,mC,4CCE9HC,E,yHACAC,EAAQ,IAAIC,WAAW,IACZ,SAASC,IAEtB,IAAKH,KAGHA,EAAoC,qBAAXI,QAA0BA,OAAOJ,iBAAmBI,OAAOJ,gBAAgBK,KAAKD,SAA+B,qBAAbE,UAAgE,oBAA7BA,SAASN,iBAAkCM,SAASN,gBAAgBK,KAAKC,WAGrO,MAAM,IAAIC,MAAM,4GAIpB,OAAOP,EAAgBC,GCjBV,4HCQf,ICFeO,MAJf,SAAkBC,GAChB,MAAuB,kBAATA,GAAqBC,EAAMC,KAAKF,IDG5CG,EAAY,GAEPC,EAAI,EAAGA,EAAI,MAAOA,EACzBD,EAAUE,MAAMD,EAAI,KAAOE,SAAS,IAAIC,OAAO,IAoBlCC,MAjBf,SAAmBC,GACjB,IAAIC,EAASC,UAAUC,OAAS,QAAsBC,IAAjBF,UAAU,GAAmBA,UAAU,GAAK,EAG7EX,GAAQG,EAAUM,EAAIC,EAAS,IAAMP,EAAUM,EAAIC,EAAS,IAAMP,EAAUM,EAAIC,EAAS,IAAMP,EAAUM,EAAIC,EAAS,IAAM,IAAMP,EAAUM,EAAIC,EAAS,IAAMP,EAAUM,EAAIC,EAAS,IAAM,IAAMP,EAAUM,EAAIC,EAAS,IAAMP,EAAUM,EAAIC,EAAS,IAAM,IAAMP,EAAUM,EAAIC,EAAS,IAAMP,EAAUM,EAAIC,EAAS,IAAM,IAAMP,EAAUM,EAAIC,EAAS,KAAOP,EAAUM,EAAIC,EAAS,KAAOP,EAAUM,EAAIC,EAAS,KAAOP,EAAUM,EAAIC,EAAS,KAAOP,EAAUM,EAAIC,EAAS,KAAOP,EAAUM,EAAIC,EAAS,MAAMI,cAMzf,IAAKf,EAASC,GACZ,MAAMe,UAAU,+BAGlB,OAAOf,GEHMgB,MApBf,SAAYC,EAASC,EAAKR,GAExB,IAAIS,GADJF,EAAUA,GAAW,IACFG,SAAWH,EAAQvB,KAAOA,KAK7C,GAHAyB,EAAK,GAAe,GAAVA,EAAK,GAAY,GAC3BA,EAAK,GAAe,GAAVA,EAAK,GAAY,IAEvBD,EAAK,CACPR,EAASA,GAAU,EAEnB,IAAK,IAAIN,EAAI,EAAGA,EAAI,KAAMA,EACxBc,EAAIR,EAASN,GAAKe,EAAKf,GAGzB,OAAOc,EAGT,OAAOV,EAAUW,I,yBCbbE,E,4MAWJC,MAAQ,CACNC,KAAM,GACNC,OAAQ,I,EAKVC,YAAcC,I,EACdC,cAAgBD,I,EAGhBE,aAAe,SAAAC,GACb,MAAwBA,EAAEC,cAAlBP,EAAR,EAAQA,KAAMQ,EAAd,EAAcA,MACd,EAAKC,SAAL,eAAiBT,EAAOQ,K,EAK1BE,aAAe,SAAAJ,GACbA,EAAEK,iBACF,MAAyB,EAAKZ,MAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OAGd,GAAa,KAATD,GAA0B,KAAXC,EAGjB,OAFA,EAAKW,MAAMC,SAASb,EAAMC,QAC1B,EAAKa,QAGPC,MAAM,6B,EAGRD,MAAQ,WACN,EAAKL,SAAS,CAAET,KAAM,GAAIC,OAAQ,M,4CAGpC,WACE,MAAyBe,KAAKjB,MAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OAEd,OACE,mCACE,uBAAMY,SAAUG,KAAKN,aAAcO,UAAWC,IAAOC,cAArD,UACE,8BACE,wBAAOC,QAASJ,KAAKd,YAAae,UAAWC,IAAOG,MAApD,iBAEE,uBACEC,KAAK,OACLd,MAAOR,EACPA,KAAK,OACLuB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRC,SAAUV,KAAKX,aACfsB,GAAIX,KAAKd,YACTe,UAAWC,IAAOU,aAIxB,8BACE,wBAAOR,QAASJ,KAAKZ,cAAea,UAAWC,IAAOG,MAAtD,mBAEE,uBACEC,KAAK,MACLd,MAAOP,EACPD,KAAK,SACLuB,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRC,SAAUV,KAAKX,aACfsB,GAAIX,KAAKZ,cACTa,UAAWC,IAAOU,aAKxB,wBAAQN,KAAK,SAASL,UAAWC,IAAOW,YAAxC,kC,GArFgBC,aAApBhC,EACGiC,aAAe,CACpB/B,KAAM,GACNC,OAAQ,IA2FZ,IAGe+B,cAAQ,MAHI,SAAAC,GAAQ,MAAK,CACtCpB,SAAU,SAACb,EAAMC,GAAP,OAAkBgC,ECpEJ,SAACjC,EAAMC,GAAP,OAAkB,SAAAgC,GAC1C,IAAMC,EAAU,CACdlC,OACAC,UAEFgC,EAASE,eACTC,IACGC,KAAK,YAAaH,GAClBI,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcN,EAASO,YAAkBD,OAC9CE,OAAM,SAAAC,GAAK,OAAIT,EAASU,YAAgBD,EAAME,cD2DZC,CAAW7C,EAAMC,QAEzC+B,CAAkClC,G,0BEtGpCgD,EAAa,SAAA/C,GAAK,OAAIA,EAAMgD,SAASC,SAErCC,EAAY,SAAAlD,GAAK,OAAIA,EAAMgD,SAASG,QAcpCC,EAAqBC,YAChC,CAb4B,SAAArD,GAAK,OAAIA,EAAMgD,SAASM,OAanCJ,IACjB,SAACF,EAAUG,GACT,IAAMI,EAAmBJ,EAAO3D,cAEhC,OAAOwD,EAASG,QAAO,SAAAhB,GAAO,OAC5BA,EAAQlC,KAAKT,cAAcgE,SAASD,SCQ3BtB,eAPS,SAAAjC,GAAK,MAAK,CAChCS,MAAOyC,EAAUlD,OAGQ,SAAAkC,GAAQ,MAAK,CACtCP,SAAU,SAAApB,GAAC,OAAI2B,EAASuB,YAAalD,EAAEmD,OAAOjD,YAEjCwB,EAzBA,SAAC,GAAyB,IAAvBxB,EAAsB,EAAtBA,MAAOkB,EAAe,EAAfA,SACvB,OACE,wBAAOT,UAAWC,IAAOG,MAAzB,iCAEE,uBACEC,KAAK,OACLd,MAAOA,EACPkB,SAAUA,EACVT,UAAWC,IAAOU,c,kBCGX8B,EAdY,SAAC,GAAsB,IAApB1D,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OAClC,OACE,qCACE,uBAAMgB,UAAWC,IAAOyC,aAAxB,UAAuC3D,EAAvC,QACA,sBAAMiB,UAAWC,IAAO0C,eAAxB,SAAyC3D,Q,kBCIzC4D,E,uKAOJ,WACE7C,KAAKJ,MAAMkD,oB,oBAGb,WAAU,IAAD,OACP,OACE,qCACG9C,KAAKJ,MAAMmD,mBAAqB,4FAEjC,oBAAI9C,UAAWC,IAAO8C,aAAtB,SACGhD,KAAKJ,MAAMmC,SAASkB,KAAI,gBAAGtC,EAAH,EAAGA,GAAI3B,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACvB,qBAAagB,UAAWC,IAAOgD,aAA/B,UACE,cAAC,EAAD,CAAoBlE,KAAMA,EAAMC,OAAQA,IACxC,wBACEqB,KAAK,SACL6C,QAAS,WACP,EAAKvD,MAAMuD,QAAQxC,IAErBV,UAAWC,IAAOkD,YALpB,sBAFOzC,e,GAlBKG,aAyDXE,eAbS,SAAAjC,GAAK,MAAK,CAChCgD,SAAUI,EAAmBpD,GAC7BgE,kBAAmBjB,EAAW/C,OAOL,SAAAkC,GAAQ,MAAK,CACtCkC,QAAS,SAAAxC,GAAE,OAAIM,EJpBY,SAAAN,GAAE,OAAI,SAAAM,GACjCA,EAASoC,eAETjC,IACGkC,OADH,oBACuB3C,IACpBW,MAAK,kBAAML,EAASsC,YAAqB5C,OACzCc,OAAM,SAAAC,GAAK,OAAIT,EAASuC,YAAmB9B,EAAME,cIc5B6B,CAAc9C,KACtCmC,gBAAiB,kBAAM7B,EJpDI,uCAAM,WAAMA,GAAN,iBAAAyC,EAAA,6DACjCzC,EAAS0C,eADwB,kBAGRvC,IAAMwC,IAAI,aAHF,gBAGvBrC,EAHuB,EAGvBA,KACRN,EAAS4C,YAAoBtC,IAJE,gDAM/BN,EAAS6C,YAAkB,KAAMlC,UANF,yDAAN,2DIsDdZ,CAA6C6B,GC7DtDkB,E,4JAIJ,WACE,OACE,cAACC,EAAA,EAAD,UACE,gCACE,2CACA,cAAC,EAAD,IAEA,0CACA,cAAC,EAAD,IAEA,cAAC,EAAD,a,GAdiBC,IAAMnD,WAyBlBiD","file":"static/js/contacts-view.ad0cded6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts_form\":\"ContactForm_contacts_form__8nkpA\",\"form_button\":\"ContactForm_form_button__3P-nP\",\"label\":\"ContactForm_label__2d7Ke\",\"input\":\"ContactForm_input__B1D1K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend_list\":\"Filter_friend_list__1hrBG\",\"item\":\"Filter_item__1jAeP\",\"avatar\":\"Filter_avatar__31Wqv\",\"name\":\"Filter_name__1Ss1E\",\"status_isOnline\":\"Filter_status_isOnline__26BqU\",\"status_isOffline\":\"Filter_status_isOffline__3zZXx\",\"label\":\"Filter_label__1JA9d\",\"input\":\"Filter_input__17yuG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact_name\":\"ElementContactList_contact_name__xF7uA\",\"contact_number\":\"ElementContactList_contact_number__2BRCi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact_list\":\"ContactList_contact_list__ajhlY\",\"contact_item\":\"ContactList_contact_item__3b5ZP\",\"item_button\":\"ContactList_item_button__3PY4G\"};","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { addContact } from '../../redux/phonebook/phonebook-operations';\nimport { v4 as uuidv4 } from 'uuid';\nimport PropTypes from 'prop-types';\nimport styles from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  static defaultProps = {\n    name: '',\n    number: '',\n  };\n\n  static propTypes = {\n    name: PropTypes.string,\n    number: PropTypes.string,\n  };\n\n  state = {\n    name: '',\n    number: '',\n    // name: this.props.name,\n    // number: this.props.number\n  };\n\n  nameInputId = uuidv4();\n  numberInputId = uuidv4();\n\n  /** Отвечает за обновление состояния*/\n  handleChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n  /** Вызывается при отправке формы */\n  // Проп который передается форме для вызова при сабмите\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { name, number } = this.state;\n    // this.props.onSubmit(name, number);\n    // this.reset();\n    if (name !== '' && number !== '') {\n      this.props.onSubmit(name, number);\n      this.reset();\n      return;\n    }\n    alert('Please fill empty fields');\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <>\n        <form onSubmit={this.handleSubmit} className={styles.contacts_form}>\n          <div>\n            <label htmlFor={this.nameInputId} className={styles.label}>\n              Name\n              <input\n                type=\"text\"\n                value={name}\n                name=\"name\"\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                required\n                onChange={this.handleChange}\n                id={this.nameInputId}\n                className={styles.input}\n              />\n            </label>\n          </div>\n          <div>\n            <label htmlFor={this.numberInputId} className={styles.label}>\n              Number\n              <input\n                type=\"tel\"\n                value={number}\n                name=\"number\"\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n                required\n                onChange={this.handleChange}\n                id={this.numberInputId}\n                className={styles.input}\n              />\n            </label>\n          </div>\n\n          <button type=\"submit\" className={styles.form_button}>\n            Add contact\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: (name, number) => dispatch(addContact(name, number)),\n});\nexport default connect(null, mapDispatchToProps)(ContactForm);\n","import axios from 'axios';\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n} from './phonebook-action';\n\n// axios.defaults.baseURL = 'http://localhost:4040';\n// ---------------------------async-await-------------------------\nexport const fetchContacts = () => async dispatch => {\n  dispatch(fetchContactRequest());\n  try {\n    const { data } = await axios.get('/contacts');\n    dispatch(fetchContactSuccess(data));\n  } catch (error) {\n    dispatch(fetchContactError(error.message));\n  }\n};\n// -----------------then-cath----------------------------------\n// export const fetchContacts = () => dispatch => {\n//   dispatch(fetchContactRequest());\n\n//   axios\n//     .get('/contacts')\n//     .then(({ data }) => dispatch(fetchContactSuccess(data)))\n//     .catch(error => dispatch(fetchContactError(error)));\n// };\n\nexport const addContact = (name, number) => dispatch => {\n  const contact = {\n    name,\n    number,\n  };\n  dispatch(addContactRequest());\n  axios\n    .post('/contacts', contact)\n    .then(({ data }) => dispatch(addContactSuccess(data)))\n    .catch(error => dispatch(addContactError(error.message)));\n};\n\nexport const deleteContact = id => dispatch => {\n  dispatch(deleteContactRequest());\n\n  axios\n    .delete(`/contacts/${id}`)\n    .then(() => dispatch(deleteContactSuccess(id)))\n    .catch(error => dispatch(deleteContactError(error.message)));\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getLoading = state => state.contacts.loading;\n\nexport const getFilter = state => state.contacts.filter;\n\nexport const getAllContacts = state => state.contacts.items;\n\n// export const getVisibleContacts = state => {\n//   const contacts = getAllContacts(state);\n//   const filter = getFilter(state);\n//   const normalizedFilter = filter.toLowerCase();\n\n//   return contacts.filter(contact =>\n//     contact.name.toLowerCase().includes(normalizedFilter),\n//   );\n// };\n//--------используем мемоизацию:\nexport const getVisibleContacts = createSelector(\n  [getAllContacts, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n","// import PropTypes from 'prop-types';\nimport React from 'react';\nimport styles from './Filter.module.css';\nimport { connect } from 'react-redux';\nimport { changeFilter } from '../../redux/phonebook/phonebook-action';\nimport { getFilter } from '../../redux/phonebook/phonebook-selectors';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <label className={styles.label}>\n      Find contact by name\n      <input\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n        className={styles.input}\n      />\n    </label>\n  );\n};\n// Filter.propTypes = {\n//   value: PropTypes.string.isRequired,\n//   onChange: PropTypes.func.isRequired,\n// };\n\nconst mapStateToProps = state => ({\n  value: getFilter(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: e => dispatch(changeFilter(e.target.value)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from '../ElementContactList/ElementContactList.module.css';\n\nconst ElementContactList = ({ name, number }) => {\n  return (\n    <>\n      <span className={styles.contact_name}>{name}: </span>\n      <span className={styles.contact_number}>{number}</span>\n    </>\n  );\n};\n\nElementContactList.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.string,\n};\n\nexport default ElementContactList;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { deleteContact } from '../../redux/phonebook/phonebook-operations';\nimport ElementContactList from '../ElementContactList/ElementContactList';\nimport styles from './ContactList.module.css';\nimport { fetchContacts } from '../../redux/phonebook/phonebook-operations';\nimport {\n  getLoading,\n  getVisibleContacts,\n} from '../../redux/phonebook/phonebook-selectors';\n\nclass ContactList extends Component {\n  static propTypes = {\n    onFetchContacts: PropTypes.func,\n    contacts: PropTypes.array.isRequired,\n    onClick: PropTypes.func.isRequired,\n  };\n\n  componentDidMount() {\n    this.props.onfetchContacts();\n  }\n\n  render() {\n    return (\n      <>\n        {this.props.isLoadingContacts && <h1>....Загружаем</h1>}\n\n        <ul className={styles.contact_list}>\n          {this.props.contacts.map(({ id, name, number }) => (\n            <li key={id} className={styles.contact_item}>\n              <ElementContactList name={name} number={number} />\n              <button\n                type=\"button\"\n                onClick={() => {\n                  this.props.onClick(id);\n                }}\n                className={styles.item_button}\n              >\n                Delete\n              </button>\n            </li>\n          ))}\n        </ul>\n      </>\n    );\n  }\n}\n//-------------перенесли в   phonebook-selectors\n// const getVisibleContacts = (contacts, filter) => {\n//   const normalizedFilter = filter.toLowerCase();\n\n//   return contacts.filter(contact =>\n//     contact.name.toLowerCase().includes(normalizedFilter),\n//   );\n// };\nconst mapStateToProps = state => ({\n  contacts: getVisibleContacts(state),\n  isLoadingContacts: getLoading(state),\n  //----------было:\n  // const mapStateToProps = ({ contacts: { items, filter, loading } }) => ({\n  //   contacts: getVisibleContacts(items, filter),\n  //   isLoadingContacts: loading,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onClick: id => dispatch(deleteContact(id)),\n  onfetchContacts: () => dispatch(fetchContacts()),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React from 'react';\nimport Container from '../Component/Container';\nimport ContactForm from '../Component/ContactForm';\nimport Filter from '../Component/Filter';\nimport ContactList from '../Component/ContactList';\n\n// import { fetchContacts } from './redux/phonebook/phonebook-operations';\n\nclass ContactsView extends React.Component {\n  // componentDidMount() {\n  //   this.props.onFetchContacts();\n  // }\n  render() {\n    return (\n      <Container>\n        <div>\n          <h1>Phonebook</h1>\n          <ContactForm />\n\n          <h2>Contacts</h2>\n          <Filter />\n\n          <ContactList />\n        </div>\n      </Container>\n    );\n  }\n}\n\n// const mapDispatchToProps = dispatch => ({\n//   onFetchContacts: () => dispatch(fetchContacts()),\n// });\n\nexport default ContactsView;\n"],"sourceRoot":""}