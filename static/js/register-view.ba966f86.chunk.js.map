{"version":3,"sources":["views/RegisterView.js"],"names":["styles","form","width","label","display","flexDirection","marginBottom","RegisterView","state","name","email","password","handleChange","target","value","setState","handleSubmit","e","preventDefault","props","onRegister","this","className","onSubmit","style","autoComplete","type","onChange","variant","Component","connect","dispatch","data","authOperations","register"],"mappings":"wQAMMA,EAAS,CACbC,KAAM,CACJC,MAAO,KAETC,MAAO,CACLC,QAAS,OACTC,cAAe,SACfC,aAAc,KAIZC,E,4MACJC,MAAQ,CACNC,KAAM,GACNC,MAAO,GACPC,SAAU,I,EAGZC,aAAe,YAAkC,IAAD,IAA9BC,OAAUJ,EAAoB,EAApBA,KAAMK,EAAc,EAAdA,MAChC,EAAKC,SAAL,eAAiBN,EAAOK,K,EAG1BE,aAAe,SAAAC,GACbA,EAAEC,iBAEF,EAAKC,MAAMC,WAAW,EAAKZ,OAE3B,EAAKO,SAAS,CAAEN,KAAM,GAAIC,MAAO,GAAIC,SAAU,M,4CAGjD,WACE,MAAkCU,KAAKb,MAA/BC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAAOC,EAArB,EAAqBA,SAErB,OACE,qBAAKW,UAAU,oBAAf,SACE,sBAAKA,UAAU,kBAAf,UACE,oBAAIA,UAAU,gBAAd,0BACA,uBACEC,SAAUF,KAAKL,aACfQ,MAAOxB,EAAOC,KACdwB,aAAa,MAHf,UAKE,wBAAOD,MAAOxB,EAAOG,MAArB,+BAEE,uBACEuB,KAAK,OACLjB,KAAK,OACLK,MAAOL,EACPkB,SAAUN,KAAKT,kBAGnB,wBAAOY,MAAOxB,EAAOG,MAArB,2CAEE,uBACEuB,KAAK,QACLjB,KAAK,QACLK,MAAOJ,EACPiB,SAAUN,KAAKT,kBAGnB,wBAAOY,MAAOxB,EAAOG,MAArB,iDAEE,uBACEuB,KAAK,WACLjB,KAAK,WACLK,MAAOH,EACPgB,SAAUN,KAAKT,kBAGnB,cAAC,IAAD,CAAQc,KAAK,SAASE,QAAQ,YAA9B,sI,GA1DeC,aA4EZC,sBAAQ,MAJI,SAAAC,GAAQ,MAAK,CACtCX,WAAY,SAAAY,GAAI,OAAID,EAASE,IAAeC,SAASF,QAGxCF,CAAkCvB","file":"static/js/register-view.ba966f86.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { authOperations } from '../redux/auth';\nimport './Views.css';\nimport { Button } from '@material-ui/core';\n\nconst styles = {\n  form: {\n    width: 320,\n  },\n  label: {\n    display: 'Flex',\n    flexDirection: 'column',\n    marginBottom: 15,\n  },\n};\n\nclass RegisterView extends Component {\n  state = {\n    name: '',\n    email: '',\n    password: '',\n  };\n\n  handleChange = ({ target: { name, value } }) => {\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.onRegister(this.state);\n\n    this.setState({ name: '', email: '', password: '' });\n  };\n\n  render() {\n    const { name, email, password } = this.state;\n\n    return (\n      <div className=\"RegisterContainer\">\n        <div className=\"RegisterSection\">\n          <h1 className=\"RegisterTitle\">Registration</h1>\n          <form\n            onSubmit={this.handleSubmit}\n            style={styles.form}\n            autoComplete=\"off\"\n          >\n            <label style={styles.label}>\n              Имя\n              <input\n                type=\"text\"\n                name=\"name\"\n                value={name}\n                onChange={this.handleChange}\n              />\n            </label>\n            <label style={styles.label}>\n              Почта\n              <input\n                type=\"email\"\n                name=\"email\"\n                value={email}\n                onChange={this.handleChange}\n              />\n            </label>\n            <label style={styles.label}>\n              Пароль\n              <input\n                type=\"password\"\n                name=\"password\"\n                value={password}\n                onChange={this.handleChange}\n              />\n            </label>\n            <Button type=\"submit\" variant=\"contained\">\n              Зарегистрироваться\n            </Button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\n// const mapDispatchToProps = {\n//   onRegister: authOperations.register,\n// };\n//то же самое, что:\nconst mapDispatchToProps = dispatch => ({\n  onRegister: data => dispatch(authOperations.register(data)),\n});\n\nexport default connect(null, mapDispatchToProps)(RegisterView);\n"],"sourceRoot":""}